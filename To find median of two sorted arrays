def find_median_sorted_arrays(nums1, nums2):
    def find_kth_element(arr1, arr2, k):
        len1, len2 = len(arr1), len(arr2)
        if len1 > len2:
            return find_kth_element(arr2, arr1, k)
        if len1 == 0:
            return arr2[k]
        if k == 0:
            return min(arr1[0], arr2[0])     
        i = min(len1 - 1, k // 2)
        j = k - i - 1     
        if arr1[i] <= arr2[j]:
            return find_kth_element(arr1[i + 1:], arr2, k - (i + 1))
        else:
            return find_kth_element(arr1, arr2[j + 1:], k - (j + 1))
    len1, len2 = len(nums1), len(nums2)
    total_len = len1 + len2    
    if total_len % 2 == 1:
        return find_kth_element(nums1, nums2, total_len // 2)
    else:
        left = find_kth_element(nums1, nums2, total_len // 2 - 1)
        right = find_kth_element(nums1, nums2, total_len // 2)
        return (left + right) / 2.0
nums1 = [1, 3]
nums2 = [2]
print(find_median_sorted_arrays(nums1, nums2))  
nums1 = [1, 2]
nums2 = [3, 4]
print(find_median_sorted_arrays(nums1, nums2))  
