class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def isValidSequence(self, root, arr):
        def dfs(node, index):
            if not node:
                return False
            if index >= len(arr) or node.val != arr[index]:
                return False
            if not node.left and not node.right:
                return index == len(arr) - 1
            return dfs(node.left, index + 1) or dfs(node.right, index + 1)
        
        return dfs(root, 0)


root = TreeNode(0)
root.left = TreeNode(1)
root.right = TreeNode(0)
root.left.left = TreeNode(0)
root.left.right = TreeNode(1)
root.right.left = TreeNode(0)
root.right.right = TreeNode(0)
root.left.right.left = TreeNode(1)
root.left.right.right = TreeNode(0)

solution = Solution()
print(solution.isValidSequence(root, [0, 1, 0, 1]))  
