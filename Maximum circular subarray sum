def max_circular_subarray_sum(nums):
    if not nums:
        return 0
    def kadane(arr):
        max_sum = float('-inf')
        current_sum = 0
        for num in arr:
            current_sum = max(num, current_sum + num)
            max_sum = max(max_sum, current_sum)
        return max_sum
    def min_kadane(arr):
        min_sum = float('inf')
        current_sum = 0
        for num in arr:
            current_sum = min(num, current_sum + num)
            min_sum = min(min_sum, current_sum)
        return min_sum
    total_sum = sum(nums)
    max_sum = kadane(nums)
    min_sum = min_kadane(nums)
    if max_sum < 0:
        return max_sum
    return max(max_sum, total_sum - min_sum)
nums = [8, -8, 9, -9, 10, -11, 12]
print(max_circular_subarray_sum(nums)) 
